{"version":3,"file":"index.es.js","sources":["../src/helpers/localization.ts","../src/translations.tsx"],"sourcesContent":["function findBestAvailableLanguage(availableLanguages: string[]) {\n  const browserLanguages = navigator && navigator.languages;\n  if (browserLanguages) {\n    for (const bl in browserLanguages) {\n      for (const al in availableLanguages) {\n        if (browserLanguages[bl] === availableLanguages[al]) {\n          return {\n            languageTag: browserLanguages[bl],\n            isRTL: false,\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction addEventListener(handler: () => void) {\n  window.addEventListener('languagechange', handler)\n}\n\nfunction removeEventListener(handler: () => void) {\n  window.removeEventListener('languagechange', handler)\n}\n\nexport { findBestAvailableLanguage, addEventListener, removeEventListener }","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\nimport {\n  findBestAvailableLanguage,\n  addEventListener,\n  removeEventListener,\n} from './helpers/localization';\n\nexport interface Translation {\n  [key: string]: any;\n}\n\nexport interface Language {\n  languageTag: string;\n  isRTL: boolean;\n}\n\nexport interface LanguageTranslations {\n  [key: string]: Translation;\n}\n\ninterface TranslationContext extends Language {\n  translations: LanguageTranslations;\n  setLanguage: (l: Language) => void;\n}\n\nconst TranslationsContext = createContext<TranslationContext>({\n  languageTag: 'en',\n  isRTL: false,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setLanguage: () => {},\n  translations: {},\n});\n\nfunction setGlobalSettings(l: Language) {\n  // change any global setting based on the lang active / selected\n}\n\nfunction getBrowserLanguage(\n  translations: Translation,\n  fallback: Language = { languageTag: 'en', isRTL: false }\n) {\n  const l = findBestAvailableLanguage(Object.keys(translations)) || fallback;\n  setGlobalSettings(l);\n  return l;\n}\n\nexport interface TranslationProviderProps {\n  translations: Translation;\n  fallback?: Language;\n}\n\nexport const TranslationsProvider: React.FC<TranslationProviderProps> = ({\n  translations,\n  fallback,\n  children,\n}) => {\n  const [{ languageTag, isRTL }, setLanguage] = useState(\n    getBrowserLanguage(translations, fallback)\n  );\n\n  const handleLanguageChange = useCallback(() => {\n    const l = getBrowserLanguage(translations, fallback);\n    setLanguage(l);\n    setGlobalSettings(l);\n  }, [translations, fallback]);\n\n  useEffect(() => {\n    addEventListener(handleLanguageChange);\n    return () => removeEventListener(handleLanguageChange);\n  }, [handleLanguageChange]);\n\n  return (\n    <TranslationsContext.Provider\n      children={children}\n      value={{\n        languageTag,\n        isRTL,\n        setLanguage,\n        translations,\n      }}\n    />\n  );\n};\n\nfunction useAvailableLanguages(): [Language[]] {\n  const t = useContext(TranslationsContext);\n  return [\n    (Object.keys(t.translations) || []).map((l) => ({\n      languageTag: l,\n      isRTL: t.translations[l].isRTL || false,\n    })),\n  ];\n}\n\nfunction useTranslationLanguage(): [Language, (l: Language) => void] {\n  const t = useContext(TranslationsContext);\n  return [\n    {\n      languageTag: t.languageTag,\n      isRTL: t.isRTL,\n    },\n    t.setLanguage,\n  ];\n}\n\nconst getTranslationFromString = (t: TranslationContext) => (\n  path: string\n): any => {\n  // eslint-disable-next-line dot-notation\n  const translation = t.translations[t.languageTag] || t.translations['en'];\n  if (path !== '') {\n    const paths = path.split('.');\n    let value = paths.reduce((a, v) => a && a[v], translation);\n    if (value === undefined) {\n      console.warn(`Missing translation ${path}`);\n      // eslint-disable-next-line dot-notation\n      value = paths.reduce((a, v) => a && a[v], t.translations['en']);\n    }\n    return value || path;\n  }\n  return translation;\n};\n\nfunction useTranslation(): (path: string) => any {\n  const t = useContext(TranslationsContext);\n  return getTranslationFromString(t);\n}\n\nexport {\n  useTranslation,\n  useTranslationLanguage,\n  useAvailableLanguages,\n};\n"],"names":[],"mappings":"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"}